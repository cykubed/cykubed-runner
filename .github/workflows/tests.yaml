name: Cykube-runner tests

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
        poetry-version: ["1.3.1"]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.CI_TOKEN }}

      - name: Install redis
        run: sudo apt-get install -y redis-tools redis-server
      - name: Verify that redis is up
        run: redis-cli ping
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install deps
        run: |
          poetry install --with=dev
      - name: Test with pytest
        env:
          PYTHONPATH: "src:."
        run: |
          poetry run pytest --github-report
      - name: Notify slack fail
        if: failure()
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: 'builds'
          payload: |
            {
                "blocks": [
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": ":boom: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|*Cykube-runner test failed*>"
                        }
                    }
                ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}

  deploy:

    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: 'Start Google Cloud Build trigger'
        run: |
          export CLOUDSDK_CORE_DISABLE_PROMPTS=1
          gcloud beta builds triggers run ${{ secrets.CLOUDBUILD_TRIGGER_ID }}

